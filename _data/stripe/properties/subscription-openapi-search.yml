openapi: 3.0.0
info:
  title: Stripe Subscription API
paths:
  /v1/subscription_items:
    get:
      description: >-
        <p>Returns a list of your subscription items for a given
        subscription.</p>
      tags:
        - Items
        - Subscriptions
      summary: Retrieve Subscription Items
    post:
      description: >-
        <p>Adds a new item to an existing subscription. No existing items will
        be changed or replaced.</p>
      tags:
        - Items
        - Subscriptions
      summary: Create Subscription Items
  /v1/subscription_items/{item}:
    delete:
      description: >-
        <p>Deletes an item from the subscription. Removing a subscription item
        from a subscription will not cancel the subscription.</p>
      tags:
        - Items
        - Subscriptions
      summary: Delete Subscription Items Item
    get:
      description: <p>Retrieves the subscription item with the given ID.</p>
      tags:
        - Items
        - Subscriptions
      summary: Retrieve Subscription Items Item
    post:
      description: >-
        <p>Updates the plan or quantity of an item on a current
        subscription.</p>
      tags:
        - Items
        - Subscriptions
      summary: Create Subscription Items Item
  /v1/subscription_items/{subscription_item}/usage_record_summaries:
    get:
      description: >-
        <p>For the specified subscription item, returns a list of summary
        objects. Each object in the list provides usage information that’s been
        summarized from multiple usage records and over a subscription billing
        period (e.g., 15 usage records in the month of September).</p>


        <p>The list is sorted in reverse-chronological order (newest first). The
        first list item represents the most current usage period that hasn’t
        ended yet. Since new usage records can still be added, the returned
        summary information for the subscription item’s ID should be seen as
        unstable until the subscription billing period ends.</p>
      tags:
        - Items
        - Record
        - Subscriptions
        - Summaries
        - Usage
      summary: Retrieve Subscription Items Subscription Item Usage Record Summaries
  /v1/subscription_items/{subscription_item}/usage_records:
    post:
      description: >-
        <p>Creates a usage record for a specified subscription item and date,
        and fills it with a quantity.</p>


        <p>Usage records provide <code>quantity</code> information that Stripe
        uses to track how much a customer is using your service. With usage
        information and the pricing model set up by the <a
        href="https://stripe.com/docs/billing/subscriptions/metered-billing">metered
        billing</a> plan, Stripe helps you send accurate invoices to your
        customers.</p>


        <p>The default calculation for usage is to add up all the
        <code>quantity</code> values of the usage records within a billing
        period. You can change this default behavior with the billing plan’s
        <code>aggregate_usage</code> <a
        href="/docs/api/plans/create#create_plan-aggregate_usage">parameter</a>.
        When there is more than one usage record with the same timestamp, Stripe
        adds the <code>quantity</code> values together. In most cases, this is
        the desired resolution, however, you can change this behavior with the
        <code>action</code> parameter.</p>


        <p>The default pricing model for metered billing is <a
        href="/docs/api/plans/object#plan_object-billing_scheme">per-unit
        pricing</a>. For finer granularity, you can configure metered billing to
        have a <a
        href="https://stripe.com/docs/billing/subscriptions/tiers">tiered
        pricing</a> model.</p>
      tags:
        - Items
        - Records
        - Subscriptions
        - Usage
      summary: Create Subscription Items Subscription Item Usage Records
  /v1/subscription_schedules:
    get:
      description: <p>Retrieves the list of your subscription schedules.</p>
      tags:
        - Schedules
        - Subscriptions
      summary: Retrieve Subscription Schedules
    post:
      description: >-
        <p>Creates a new subscription schedule object. Each customer can have up
        to 500 active or scheduled subscriptions.</p>
      tags:
        - Schedules
        - Subscriptions
      summary: Create Subscription Schedules
  /v1/subscription_schedules/{schedule}:
    get:
      description: >-
        <p>Retrieves the details of an existing subscription schedule. You only
        need to supply the unique subscription schedule identifier that was
        returned upon subscription schedule creation.</p>
      tags:
        - Schedules
        - Subscriptions
      summary: Retrieve Subscription Schedules Schedule
    post:
      description: <p>Updates an existing subscription schedule.</p>
      tags:
        - Schedules
        - Subscriptions
      summary: Create Subscription Schedules Schedule
  /v1/subscription_schedules/{schedule}/cancel:
    post:
      description: >-
        <p>Cancels a subscription schedule and its associated subscription
        immediately (if the subscription schedule has an active subscription). A
        subscription schedule can only be canceled if its status is
        <code>not_started</code> or <code>active</code>.</p>
      tags:
        - Cancel
        - Schedules
        - Subscriptions
      summary: Create Subscription Schedules Schedule Cancel
  /v1/subscription_schedules/{schedule}/release:
    post:
      description: >-
        <p>Releases the subscription schedule immediately, which will stop
        scheduling of its phases, but leave any existing subscription in place.
        A schedule can only be released if its status is
        <code>not_started</code> or <code>active</code>. If the subscription
        schedule is currently associated with a subscription, releasing it will
        remove its <code>subscription</code> property and set the subscription’s
        ID to the <code>released_subscription</code> property.</p>
      tags:
        - Releases
        - Schedules
        - Subscriptions
      summary: Create Subscription Schedules Schedule Release
  /v1/subscriptions:
    get:
      description: >-
        <p>By default, returns a list of subscriptions that have not been
        canceled. In order to list canceled subscriptions, specify
        <code>status=canceled</code>.</p>
      tags:
        - Subscriptions
      summary: Retrieve Subscriptions
    post:
      description: >-
        <p>Creates a new subscription on an existing customer. Each customer can
        have up to 500 active or scheduled subscriptions.</p>


        <p>When you create a subscription with
        <code>collection_method=charge_automatically</code>, the first invoice
        is finalized as part of the request.

        The <code>payment_behavior</code> parameter determines the exact
        behavior of the initial payment.</p>


        <p>To start subscriptions where the first invoice always begins in a
        <code>draft</code> status, use <a
        href="/docs/billing/subscriptions/subscription-schedules#managing">subscription
        schedules</a> instead.

        Schedules provide the flexibility to model more complex billing
        configurations that change over time.</p>
      tags:
        - Subscriptions
      summary: Create Subscriptions
  /v1/subscriptions/search:
    get:
      description: >-
        <p>Search for subscriptions you’ve previously created using Stripe’s <a
        href="/docs/search#search-query-language">Search Query Language</a>.

        Don’t use search in read-after-write flows where strict consistency is
        necessary. Under normal operating

        conditions, data is searchable in less than a minute. Occasionally,
        propagation of new or updated data can be up

        to an hour behind during outages. Search functionality is not available
        to merchants in India.</p>
      tags:
        - Search
        - Subscriptions
      summary: Retrieve Subscriptions Search
  /v1/subscriptions/{subscription_exposed_id}:
    delete:
      description: >-
        <p>Cancels a customer’s subscription immediately. The customer will not
        be charged again for the subscription.</p>


        <p>Note, however, that any pending invoice items that you’ve created
        will still be charged for at the end of the period, unless manually <a
        href="#delete_invoiceitem">deleted</a>. If you’ve set the subscription
        to cancel at the end of the period, any pending prorations will also be
        left in place and collected at the end of the period. But if the
        subscription is set to cancel immediately, pending prorations will be
        removed.</p>


        <p>By default, upon subscription cancellation, Stripe will stop
        automatic collection of all finalized invoices for the customer. This is
        intended to prevent unexpected payment attempts after the customer has
        canceled a subscription. However, you can resume automatic collection of
        the invoices manually after subscription cancellation to have us
        proceed. Or, you could check for unpaid invoices before allowing the
        customer to cancel the subscription at all.</p>
      tags:
        - Exposed
        - Subscriptions
      summary: Delete Subscriptions Subscription Exposed Id
    get:
      description: <p>Retrieves the subscription with the given ID.</p>
      tags:
        - Exposed
        - Subscriptions
      summary: Retrieve Subscriptions Subscription Exposed Id
    post:
      description: >-
        <p>Updates an existing subscription to match the specified parameters.

        When changing prices or quantities, we optionally prorate the price we
        charge next month to make up for any price changes.

        To preview how the proration is calculated, use the <a
        href="/docs/api/invoices/upcoming">upcoming invoice</a> endpoint.</p>


        <p>By default, we prorate subscription changes. For example, if a
        customer signs up on May 1 for a <currency>100</currency> price, they’ll
        be billed <currency>100</currency> immediately. If on May 15 they switch
        to a <currency>200</currency> price, then on June 1 they’ll be billed
        <currency>250</currency> (<currency>200</currency> for a renewal of her
        subscription, plus a <currency>50</currency> prorating adjustment for
        half of the previous month’s <currency>100</currency> difference).
        Similarly, a downgrade generates a credit that is applied to the next
        invoice. We also prorate when you make quantity changes.</p>


        <p>Switching prices does not normally change the billing date or
        generate an immediate charge unless:</p>


        <ul>

        <li>The billing interval is changed (for example, from monthly to
        yearly).</li>

        <li>The subscription moves from free to paid, or paid to free.</li>

        <li>A trial starts or ends.</li>

        </ul>


        <p>In these cases, we apply a credit for the unused time on the previous
        price, immediately charge the customer using the new price, and reset
        the billing date.</p>


        <p>If you want to charge for an upgrade immediately, pass
        <code>proration_behavior</code> as <code>always_invoice</code> to create
        prorations, automatically invoice the customer for those proration
        adjustments, and attempt to collect payment. If you pass
        <code>create_prorations</code>, the prorations are created but not
        automatically invoiced. If you want to bill the customer for the
        prorations before the subscription’s renewal date, you need to manually
        <a href="/docs/api/invoices/create">invoice the customer</a>.</p>


        <p>If you don’t want to prorate, set the <code>proration_behavior</code>
        option to <code>none</code>. With this option, the customer is billed
        <currency>100</currency> on May 1 and <currency>200</currency> on June
        1. Similarly, if you set <code>proration_behavior</code> to
        <code>none</code> when switching between different billing intervals
        (for example, from monthly to yearly), we don’t generate any credits for
        the old subscription’s unused time. We still reset the billing date and
        bill immediately for the new subscription.</p>


        <p>Updating the quantity on a subscription many times in an hour may
        result in <a href="/docs/rate-limits">rate limiting</a>. If you need to
        bill for a frequently changing quantity, consider integrating <a
        href="/docs/billing/subscriptions/usage-based">usage-based billing</a>
        instead.</p>
      tags:
        - Exposed
        - Subscriptions
      summary: Create Subscriptions Subscription Exposed Id
  /v1/subscriptions/{subscription_exposed_id}/discount:
    delete:
      description: <p>Removes the currently applied discount on a subscription.</p>
      tags:
        - Discount
        - Exposed
        - Subscriptions
      summary: Delete Subscriptions Subscription Exposed Id Discount
  /v1/subscriptions/{subscription}/resume:
    post:
      description: >-
        <p>Initiates resumption of a paused subscription, optionally resetting
        the billing cycle anchor and creating prorations. If a resumption
        invoice is generated, it must be paid or marked uncollectible before the
        subscription will be unpaused. If payment succeeds the subscription will
        become <code>active</code>, and if payment fails the subscription will
        be <code>past_due</code>. The resumption invoice will void automatically
        if not paid by the expiration
      tags:
        - Resume
        - Subscriptions
      summary: Create Subscriptions Subscription Resume
